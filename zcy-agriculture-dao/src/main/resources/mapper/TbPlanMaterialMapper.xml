<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zcy.agriculture.mapper.TbPlanMaterialMapper">
    
    <resultMap type="TbPlanMaterial" id="TbPlanMaterialResult">
        <result property="planMaterialId"    column="plan_material_id"    />
        <result property="warehouseId"    column="warehouse_id"    />
        <result property="materialId"    column="material_id"    />
        <result property="materialAmount"    column="material_amount"    />
        <result property="materialUnit"    column="material_unit"    />
        <result property="planId"    column="plan_id"    />
    </resultMap>
	
	<sql id="selectTbPlanMaterialVo">
        select plan_material_id, warehouse_id, material_id, material_amount, material_unit, plan_id from tb_plan_material
    </sql>
	
    <select id="selectTbPlanMaterialList" parameterType="TbPlanMaterial" resultMap="TbPlanMaterialResult">
        <include refid="selectTbPlanMaterialVo"/>
        <where>  
            <if test="planMaterialId != null "> and plan_material_id = #{planMaterialId}</if>
             <if test="warehouseId != null "> and warehouse_id = #{warehouseId}</if>
             <if test="materialId != null "> and material_id = #{materialId}</if>
             <if test="materialAmount != null "> and material_amount = #{materialAmount}</if>
             <if test="materialUnit != null  and materialUnit != '' "> and material_unit = #{materialUnit}</if>
             <if test="planId != null "> and plan_id = #{planId}</if>
         </where>
    </select>
    
    <select id="selectTbPlanMaterialById" parameterType="Long" resultMap="TbPlanMaterialResult">
        <include refid="selectTbPlanMaterialVo"/>
        where plan_material_id = #{planMaterialId}
    </select>
        
    <insert id="insertTbPlanMaterial" parameterType="TbPlanMaterial" useGeneratedKeys="true" keyProperty="planMaterialId">
        insert into tb_plan_material
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="warehouseId != null  ">warehouse_id,</if>
			<if test="materialId != null  ">material_id,</if>
			<if test="materialAmount != null  ">material_amount,</if>
			<if test="materialUnit != null  and materialUnit != ''  ">material_unit,</if>
			<if test="planId != null  ">plan_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="warehouseId != null  ">#{warehouseId},</if>
			<if test="materialId != null  ">#{materialId},</if>
			<if test="materialAmount != null  ">#{materialAmount},</if>
			<if test="materialUnit != null  and materialUnit != ''  ">#{materialUnit},</if>
			<if test="planId != null  ">#{planId},</if>
         </trim>
    </insert>
    
    <insert id="copyPlanMaterial" parameterType="TbPlanMaterial">
        insert into tb_plan_material
		<trim prefix="(" suffix=")" suffixOverrides=",">
			warehouse_id,
			material_id,
			material_amount,
			material_unit,
			plan_id,
         </trim>
        select warehouse_id , material_id , material_amount , material_unit , #{newPlanId} from 
        tb_plan_material where plan_id = #{planId}
    </insert>
    
    <insert id="insertBatchTbPlanMaterial" parameterType="TbPlanMaterial">
        insert into tb_plan_material
		<trim prefix="(" suffix=")" suffixOverrides=",">
			warehouse_id,
			material_id,
			material_amount,
			material_unit,
			plan_id,
         </trim>
         values
         <foreach collection="list" item="team" separator=",">
	         <trim prefix=" (" suffix=")" suffixOverrides=",">
				#{team.warehouseId},
				#{team.materialId},
				#{team.materialAmount},
				#{team.materialUnit},
				#{team.planId},
	         </trim>
         </foreach>
    </insert>
	 
    <update id="updateTbPlanMaterial" parameterType="TbPlanMaterial">
        update tb_plan_material
        <trim prefix="SET" suffixOverrides=",">
            <if test="warehouseId != null  ">warehouse_id = #{warehouseId},</if>
            <if test="materialId != null  ">material_id = #{materialId},</if>
            <if test="materialAmount != null  ">material_amount = #{materialAmount},</if>
            <if test="materialUnit != null  and materialUnit != ''  ">material_unit = #{materialUnit},</if>
            <if test="planId != null  ">plan_id = #{planId},</if>
        </trim>
        where plan_material_id = #{planMaterialId}
    </update>

	<delete id="deleteTbPlanMaterialById" parameterType="Long">
        delete from tb_plan_material where plan_material_id = #{planMaterialId}
    </delete>
    <delete id="deleteTbPlanMaterialByPlanId" parameterType="Long">
        delete from tb_plan_material where plan_id = #{planId}
    </delete>
	
    <delete id="deleteTbPlanMaterialByIds" parameterType="String">
        delete from tb_plan_material where plan_material_id in 
        <foreach item="planMaterialId" collection="array" open="(" separator="," close=")">
            #{planMaterialId}
        </foreach>
    </delete>
<!--     查询物品信息 报过物品名称 和仓库名称 -->
    <select id="selectByPlanIdList" parameterType="org.zcy.agriculture.vo.TbPlanMaterialVo" resultType="org.zcy.agriculture.vo.TbPlanMaterialVo">
        SELECT
			t.material_amount AS materialAmount,
			t.material_id AS materialId,
			t.material_unit AS materialUnit,
			t.plan_id AS planId,
			t.plan_material_id AS planMaterialId,
			t.warehouse_id AS warehouseId,
			t1.`name` AS warehouseName,
			t2.`material_name` AS materialName
		FROM
			tb_plan_material t
		INNER JOIN tb_warehouse t1 ON t.warehouse_id = t1.warehouse_id
		INNER JOIN tb_article t2 ON t.material_id = t2.material_id
		WHERE t.plan_id = #{planId}
    </select>
</mapper>